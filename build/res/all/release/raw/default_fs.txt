
precision mediump float;
uniform vec3 uLightPos;
uniform vec3 uColor;

varying vec4 vPositionModel;
varying vec4 vPositionView;
varying vec3 vNormal;

void main() {
	float diffuse = 0.0;
	float specular = 0.0;
	vec3 lightDir = uLightPos - vPositionModel.xyz;
	vec3 N = normalize(vNormal);
	vec3 L = normalize(lightDir);		
	float lambert = dot(N, L);
	if (lambert > 0.0) {
		diffuse = lambert * 0.7;
		vec3 R = reflect(-L, N);
		vec3 E = normalize(-vPositionView.xyz);
		specular = pow(max(dot(R, E), 0.0), 32.0) * 0.3;
	}
	gl_FragColor = vec4(uColor * (0.4 + diffuse + specular), 1.0);
}
